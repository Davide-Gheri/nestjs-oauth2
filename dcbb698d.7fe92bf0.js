(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{159:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var i=n(2),o=n(9),r=(n(0),n(161)),a={id:"scopes",title:"Scopes"},c={id:"api/scopes",title:"Scopes",description:"Scopes are keys used by the application to attach permissions to a specific access_token.",source:"@site/docs/api/scopes.md",permalink:"/nestjs-oauth2/docs/api/scopes",sidebar:"api",previous:{title:"Introduction",permalink:"/nestjs-oauth2/docs/api/introduction"},next:{title:"Authorization code grant",permalink:"/nestjs-oauth2/docs/api/oauth2/authorization_code"}},s=[{value:"OpenID scopes",id:"openid-scopes",children:[{value:"openid",id:"openid",children:[]},{value:"email",id:"email",children:[]},{value:"profile",id:"profile",children:[]}]},{value:"ID token",id:"id-token",children:[]},{value:"Other OAuth2 scopes",id:"other-oauth2-scopes",children:[]}],p={rightToc:s};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(i.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Scopes are keys used by the application to attach permissions to a specific ",Object(r.b)("inlineCode",{parentName:"p"},"access_token"),".\nA scope can represent everything and be in every format, a common format to describe CRUD operations is ",Object(r.b)("inlineCode",{parentName:"p"},"entity:action")," (",Object(r.b)("inlineCode",{parentName:"p"},"page:edit"),", ",Object(r.b)("inlineCode",{parentName:"p"},"page:delete")," ecc...)."),Object(r.b)("p",null,"These scopes are generally used by the client application to handle what the ",Object(r.b)("inlineCode",{parentName:"p"},"access_token")," (the user) can do in its application."),Object(r.b)("h2",{id:"openid-scopes"},"OpenID scopes"),Object(r.b)("p",null,"There are though some default scopes, defined by the ",Object(r.b)("strong",{parentName:"p"},"OpenID")," connect specification, that generally describes what user information the client app has requesting access; the commonly used are:"),Object(r.b)("h3",{id:"openid"},"openid"),Object(r.b)("p",null,"parent scope, required to ask for any other openid scopes. By default, gives access just to the user id"),Object(r.b)("h3",{id:"email"},"email"),Object(r.b)("p",null,"gives access to the user email and email related info (email verified, email verified at ecc...)"),Object(r.b)("h3",{id:"profile"},"profile"),Object(r.b)("p",null,"gives access to many other user fields (name, picture, ecc...)"),Object(r.b)("h2",{id:"id-token"},"ID token"),Object(r.b)("p",null,"When the ",Object(r.b)("inlineCode",{parentName:"p"},"openid")," scope is requested, the ",Object(r.b)("inlineCode",{parentName:"p"},"/oauth/token")," response payload will include a new field, ",Object(r.b)("inlineCode",{parentName:"p"},"id_token"),".\nThe ",Object(r.b)("inlineCode",{parentName:"p"},"id_token")," field is a JWT containing the requested openid user info. It does not give access to any api (it is not an access_token), it is just an handy way to pass the requested user information in the same request."),Object(r.b)("h2",{id:"other-oauth2-scopes"},"Other OAuth2 scopes"),Object(r.b)("p",null,"To issue a ",Object(r.b)("inlineCode",{parentName:"p"},"refresh_token"),", a client must explicitly ask for it and an user must explicitly authorize it.\nThis is done with the ",Object(r.b)("inlineCode",{parentName:"p"},"offline_access")," scope.\nIf an authorization request includes this scope, the ",Object(r.b)("inlineCode",{parentName:"p"},"/oauth/token")," response payload will include a new field, ",Object(r.b)("inlineCode",{parentName:"p"},"refresh_token"),", containing the refresh token associated with the response ",Object(r.b)("inlineCode",{parentName:"p"},"access_token"),"."))}l.isMDXComponent=!0},161:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return h}));var i=n(0),o=n.n(i);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),l=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,a=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),b=i,h=u["".concat(a,".").concat(b)]||u[b]||d[b]||r;return n?o.a.createElement(h,c(c({ref:t},p),{},{components:n})):o.a.createElement(h,c({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var p=2;p<r;p++)a[p]=n[p];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);