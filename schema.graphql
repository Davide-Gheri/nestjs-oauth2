# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type OAuthClient {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  secret: String!
  redirect: [String!]!
  meta: JSON!
  grantTypes: [GrantTypes!]!
  responseTypes: [ResponseTypes!]!
  responseModes: [ResponseModes!]!
  scopes: [String!]!
  firstParty: Boolean!
  authMethods: [TokenAuthMethod!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

enum GrantTypes {
  password
  authorization_code
  refresh_token
  client_credentials
}

enum ResponseTypes {
  code
}

enum ResponseModes {
  query
  fragment
  form_port
}

enum TokenAuthMethod {
  client_secret_post
  client_secret_basic
  none
}

type User {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  nickname: String!
  firstName: String
  lastName: String
  email: EmailAddress
  emailVerifiedAt: DateTime
  role: Roles!
  tfaEnabled: Boolean!
  picture: String!
}

"""
A field whose value conforms to the standard internet email address format as specified in RFC822: https://www.w3.org/Protocols/rfc822/.
"""
scalar EmailAddress

enum Roles {
  ADMIN
  USER
}

type Session {
  sessionId: ID!
  ip: String!
  userAgent: String
  os: String
  browser: String
  createdAt: DateTime
}

type Query {
  getClients: [OAuthClient!]!
  getClient(id: ID!): OAuthClient!
  getUsers: [User!]!
  getUser(id: ID!): User!
  activeSessions: [Session!]!
}

type Mutation {
  createClient(data: CreateClientInput!): OAuthClient!
  updateClient(data: UpdateClientInput!, id: ID!): OAuthClient!
  deleteClient(id: ID!): Boolean!
  createUser(data: CreateUserInput!): User!
  updateUser(data: UpdateUserInput!, id: ID!): User!
  deleteUser(id: ID!): Boolean!
  deleteSession(id: ID!): Boolean!
  updateCurrentUser(data: UpdateCurrentUserInput!): User!
  requestTfa: String!
  verifyTfa(code: String!): Boolean!
  disableTfa: Boolean!
}

input CreateClientInput {
  name: String!
  meta: ClientMetaInput
  redirect: [String!]!
  firstParty: Boolean = false
}

input ClientMetaInput {
  description: String
  logo_uri: String
}

input UpdateClientInput {
  name: String
  meta: ClientMetaInput
  redirect: [String!]
  grantTypes: [String!]
  responseTypes: [String!]
  responseModes: [String!]
  authMethods: [String!]
  firstParty: Boolean
  scopes: [String!]
}

input CreateUserInput {
  nickname: String!
  firstName: String
  lastName: String
  email: EmailAddress!
  password: String!
  passwordConfirm: String!
  role: Roles = USER
}

input UpdateUserInput {
  nickname: String
  firstName: String
  lastName: String
  email: EmailAddress
  role: Roles
}

input UpdateCurrentUserInput {
  nickname: String
  firstName: String
  lastName: String
  email: EmailAddress
  password: String
  passwordConfirm: String
  currentPassword: String
}
